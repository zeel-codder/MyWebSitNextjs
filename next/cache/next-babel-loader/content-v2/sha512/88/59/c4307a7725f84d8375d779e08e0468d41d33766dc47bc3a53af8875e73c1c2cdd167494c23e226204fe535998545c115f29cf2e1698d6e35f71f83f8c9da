{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n @name:BlogPage\n @type:React Component\n @param:none\n @returns: JSX of BlogPage.\n @functionality : This Component is Data of Blog on screen.\n**/\n// Html/Html4SimpleTages/Html4SimpleTages.md\n// Imports\n// ====================================\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Reactmarkdown from 'react-markdown'; // import { useRouter } from 'next/router'\n\nimport axios from 'axios';\nimport Prism from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-markup\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-css\";\nimport \"prismjs/plugins/toolbar/prism-toolbar.css\";\nimport \"prismjs/plugins/toolbar/prism-toolbar\";\nimport \"prismjs/plugins/show-language/prism-show-language\";\nimport \"prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard\";\nimport Like from '@Blog/Like';\nimport Template from '@Layout/Template';\nimport matter from 'gray-matter'; // ====================================\n\nvar Blog = (_ref) => {\n  var {\n    data,\n    file\n  } = _ref;\n  var dic = {\n    data,\n    file\n  };\n  return /*#__PURE__*/React.createElement(Template, {\n    Component: BlogPage,\n    data: dic\n  });\n};\n\nfunction BlogPage(_ref2) {\n  var {\n    data,\n    file\n  } = _ref2;\n  //=============================\n  // @name:useEffect\n  // @type:React Hook UseEffect\n  // @param:none\n  // @return:none\n  // @functionality: UseEffect is used read the contend of read me and store in data hook.\n  //=============================\n  useEffect(() => {\n    setTimeout(() => {\n      Prism.highlightAll();\n    }, 0); // console.log(file)\n  }, []); // console.log(blogInfo,'main');\n  // Prism.usePrismHighlightAll();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" blog-container\"\n  }, /*#__PURE__*/React.createElement(Reactmarkdown // plugins={[gfm]}\n  , {\n    allowDangerousHtml: \"true\"\n  }, file), \"        \", data !== 0 && /*#__PURE__*/React.createElement(Like, {\n    className: \"Share\",\n    blogInfo: data,\n    isBlogShort: false\n  })));\n}\n\nexport function getStaticProps(_x) {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator(function* (context) {\n    var name = context.params.name;\n    var data = yield axios.post(process.env.WebLink + \"api/bloginfoone\", {\n      name\n    }).then(response => {\n      // console.log(response.data);\n      return JSON.parse(response.data.message);\n    }).catch(err => console.log(err));\n    var file = yield import('../../Blogs/' + data.url); // axios.post(`/BlogInfoOne`,{name:blogname})\n\n    var content = matter(file.default).content;\n    return {\n      props: {\n        data,\n        file: content\n      }\n    };\n  });\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport function getStaticPaths() {\n  return _getStaticPaths.apply(this, arguments);\n}\n\nfunction _getStaticPaths() {\n  _getStaticPaths = _asyncToGenerator(function* () {\n    return {\n      paths: [],\n      fallback: 'blocking'\n    };\n  });\n  return _getStaticPaths.apply(this, arguments);\n}\n\nexport default Blog;","map":null,"metadata":{},"sourceType":"module"}