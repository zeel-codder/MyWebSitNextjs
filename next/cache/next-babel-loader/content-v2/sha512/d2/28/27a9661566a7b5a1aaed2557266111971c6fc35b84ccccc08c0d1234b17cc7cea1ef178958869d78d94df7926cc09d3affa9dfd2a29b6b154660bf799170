{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport UserProfile from 'Components/User/UserProfile';\nimport Template from '@Layout/Template';\nexport default function User(_ref) {\n  var {\n    data\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Template, {\n    Component: UserProfile,\n    data: data\n  });\n}\nexport function getStaticProps(_x) {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator(function* (context) {\n    var name = context.params.name;\n    var data = {\n      name\n    };\n    return {\n      props: {\n        data\n      }\n    };\n  });\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport function getStaticPaths() {\n  return _getStaticPaths.apply(this, arguments);\n}\n\nfunction _getStaticPaths() {\n  _getStaticPaths = _asyncToGenerator(function* () {\n    return {\n      paths: [],\n      fallback: 'blocking'\n    };\n  });\n  return _getStaticPaths.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}