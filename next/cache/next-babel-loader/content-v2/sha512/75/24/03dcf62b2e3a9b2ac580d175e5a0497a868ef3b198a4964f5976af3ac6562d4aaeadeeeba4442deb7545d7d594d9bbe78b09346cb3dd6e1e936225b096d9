{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from 'axios';\nimport bcrypt from 'bcryptjs'; // import React from \"react\";\n\nvar FindUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (e, state, Reducer, GotoHome) {\n    e !== null && e.preventDefault();\n    var newUser = {\n      username: state.name,\n      name: state.email,\n      password: state.passWord\n    }; // console.log(newUser);\n\n    axios.post(\"/api/finduser\", _objectSpread({}, newUser)).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (res) {\n        // console.log(res.);\n        // console.log(res.data)\n        var data = res.data;\n        res = res.data.result;\n        var isPassWordSame = yield bcrypt.compare(state.passWord, res.password);\n\n        if (isPassWordSame) {\n          newUser.username = res.username;\n          localStorage.setItem('User', JSON.stringify(data)); // dispatchUser({ type: 'UserLogIn', data: res });\n\n          yield GotoHome();\n        } else {\n          alert('Wrong PassWord');\n        }\n\n        Reducer({\n          type: 'changeLoadingFalse'\n        });\n      });\n\n      return function (_x5) {\n        return _ref2.apply(this, arguments);\n      };\n    }()).catch(error => {\n      console.error(error);\n      alert('UserName is not valid');\n      Reducer({\n        type: 'changeLoadingFalse'\n      });\n    });\n  });\n\n  return function FindUser(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar AddUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (e, state, Reducer, GotoHome) {\n    e !== null && e.preventDefault(); // console.log(e)\n\n    if (state.issame) {\n      var newUser = {\n        username: state.name,\n        name: state.email,\n        password: state.passWord\n      };\n      axios.post('/api/adduser', newUser).then( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator(function* (res) {\n          if (res.status === 200) {\n            var data = res.data;\n            res = res.data.result; // console.log(res);\n\n            localStorage.setItem('User', JSON.stringify(data)); // dispatchUser({ type: 'UserLogIn', data: newUser });\n\n            yield GotoHome();\n          }\n\n          Reducer({\n            type: 'changeLoadingFalse'\n          });\n        });\n\n        return function (_x10) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(error => {\n        // console.log(error);\n        alert('User Exits');\n        Reducer({\n          type: 'changeLoadingFalse'\n        }); // alert('error');\n      });\n    } else {\n      alert('Pass Word Done mathch');\n      Reducer({\n        type: 'changeLoadingFalse'\n      });\n    }\n  });\n\n  return function AddUser(_x6, _x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar AddUserWithGoogle = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(function* (data, Reducer, GotoHome) {\n    var newUser = {\n      username: data.profileObj.name,\n      name: data.profileObj.email,\n      password: data.profileObj.googleId,\n      token: data.accessToken\n    }; // console.log(newUser,'<--');\n\n    return yield axios.post('/api/adduser', newUser).then( /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (res) {\n        var datau = res.data;\n        res = res.data.result;\n\n        if (res.status === 200) {// console.log(res);\n          // dispatchUser({ type: 'UserLogIn', data: newUser });\n        }\n\n        localStorage.setItem('User', JSON.stringify(datau));\n        Reducer({\n          type: 'changeLoadingFalse'\n        });\n        yield GotoHome();\n      });\n\n      return function (_x14) {\n        return _ref6.apply(this, arguments);\n      };\n    }()).catch(error => {\n      // console.log(error)/;\n      alert('User Exits');\n      Reducer({\n        type: 'changeLoadingFalse'\n      }); // alert('error');\n    }); // console.log(localStorage.getItem('User'),'<-');\n  });\n\n  return function AddUserWithGoogle(_x11, _x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar FindUserWithGoogle = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator(function* (data, Reducer, GotoHome) {\n    // console.log(data)\n    // console.log('call')\n    var newUser = {\n      username: data.profileObj.name,\n      name: data.profileObj.email,\n      password: data.profileObj.googleId,\n      token: data.accessToken\n    };\n    yield axios.post('/api/finduser', _objectSpread({}, newUser)).then( /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(function* (res) {\n        var datau = res.data;\n        res = res.data.result; // console.log(res);\n        // console.log()\n        // res = JSON.parse(res.data.message);\n        // console.log(await bcrypt.hash(newUser.password),res.password  )\n\n        var isPassWordSame = yield bcrypt.compare(newUser.password, res.password); // const isPassWordSame=true;\n        // console.log(isPassWordSame)\n\n        if (isPassWordSame) {\n          localStorage.setItem('User', JSON.stringify(datau)); // dispatchUser({ type: 'UserLogIn', data: res });\n\n          yield GotoHome();\n        } else {\n          alert('Wrong PassWord');\n        }\n\n        Reducer({\n          type: 'changeLoadingFalse'\n        });\n      });\n\n      return function (_x18) {\n        return _ref8.apply(this, arguments);\n      };\n    }()).catch(error => {\n      console.error(error);\n      alert('UserName is not valid');\n      Reducer({\n        type: 'changeLoadingFalse'\n      });\n    });\n  });\n\n  return function FindUserWithGoogle(_x15, _x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexport { FindUser, AddUser, AddUserWithGoogle, FindUserWithGoogle };","map":null,"metadata":{},"sourceType":"module"}