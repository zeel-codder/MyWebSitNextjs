{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n @name:Login\n @type:React Component\n @param:none\n @returns: JSX of Profile of User details\n @functionality : This Component is use to show The profile of current user in Web.\n**/\n// Imports\n// ====================================\n// import { AiTwotoneMail } from 'react-icons/ai';\n// import {BsFillPersonFill} from 'react-icons/bs';\n// import { RiLockPasswordFill } from 'react-icons/ri';\n// import {MdSubject} from 'react-icons/md';\n// import { useState } from 'react';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport React from \"react\"; // import { useGlobalContext } from '../context';\n\nimport GoogleButton from './GoogleAuth';\nimport Loading from '../Loadding';\nimport { useRouter } from 'next/router';\nimport { FindUser, AddUser, AddUserWithGoogle, FindUserWithGoogle } from './LoginFunctions'; // ==================================== \n\n/**\n @name:reducer\n @type:Javascript Function\n @param:state ,action\n @returns: Updated State object.\n @functionality : This Reducer of Login Website Hook Reducer UserState.\n**/\n\nvar reducer = (state, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case 'changeLoadingTrue':\n      // const tem=!state.isLoading;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case 'changeLoadingFalse':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        issame: false,\n        isLoading: false,\n        passWord: '',\n        email: '',\n        compassWord: '',\n        name: ''\n      });\n\n    case 'changeLoginTrue':\n      // const tem=!state.isLoading;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoginOpen: true,\n        issame: false,\n        isLoading: false,\n        passWord: '',\n        email: '',\n        compassWord: '',\n        name: ''\n      });\n\n    case 'changeLoginFalse':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoginOpen: false,\n        issame: false,\n        isLoading: false,\n        passWord: '',\n        email: '',\n        compassWord: '',\n        name: ''\n      });\n\n    case 'SetSameTrue':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        issame: true\n      });\n\n    case 'SetSameFalse':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        issame: false\n      });\n\n    case 'setname':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n\n    case 'setEmail':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.data\n      });\n\n    case 'setPassword':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        passWord: action.data\n      });\n\n    case 'setComPassword':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        compassWord: action.data\n      });\n\n    case 'TogglePassWordShow':\n      var ans = !state.isPassWordShowOpen;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isPassWordShowOpen: ans\n      });\n  }\n\n  return _objectSpread({}, state);\n};\n\nvar Login = props => {\n  var InitialState = {\n    isLoginOpen: props.choice !== \"Singin\",\n    issame: false,\n    isLoading: false,\n    name: '',\n    passWord: '',\n    email: '',\n    compassWord: '',\n    isPassWordShowOpen: false\n  };\n  var router = useRouter();\n  var [state, Reducer] = useReducer(reducer, InitialState);\n\n  var GotoHome = () => {\n    router.push('/');\n  };\n\n  useEffect(() => {\n    if (state.passWord === state.compassWord) {\n      Reducer({\n        type: 'SetSameTrue'\n      });\n    } else {\n      Reducer({\n        type: 'SetSameFalse'\n      });\n    }\n  }, [state.passWord, state.compassWord]); // console.log(prpos);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Log\"\n  }, /*#__PURE__*/React.createElement(\"em\", null, \"Zeel Codder Web-Site Auth\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-choice form\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => router.push('/auth/login'),\n    className: state.isLoginOpen ? \"open\" : null\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => router.push('/auth/singin'),\n    className: state.isLoginOpen ? null : \"open\"\n  }, \"Sing in\")), state.isLoading ? /*#__PURE__*/React.createElement(Loading, null) : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form \".concat(state.isLoginOpen ? 'form-login' : 'form-singin', \" open\"),\n    onSubmit: e => {\n      Reducer({\n        type: 'changeLoadingTrue'\n      });\n      state.isLoginOpen ? FindUser(e, state, Reducer, GotoHome) : AddUser(e, state, Reducer, GotoHome);\n    }\n  }, !state.isLoginOpen && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input\",\n    onChange: e => Reducer({\n      type: 'setname',\n      data: e.target.value\n    }),\n    value: state.name,\n    type: \"name\",\n    name: \"name\",\n    placeholder: \"Enter name\",\n    required: true\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input\",\n    onChange: e => Reducer({\n      type: 'setEmail',\n      data: e.target.value\n    }),\n    value: state.email,\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    required: true\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input\",\n    type: state.isPassWordShowOpen ? \"text\" : \"passWord\",\n    name: \"subject\",\n    onChange: e => Reducer({\n      type: 'setPassword',\n      data: e.target.value\n    }),\n    value: state.passWord,\n    placeholder: \"Enter PassWord\",\n    required: true\n  })), state.isLoginOpen || /*#__PURE__*/React.createElement(React.Fragment, null, state.passWord == '' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert\",\n    style: {\n      color: 'green'\n    }\n  }, \"Enter password first\") || state.passWord.length < 8 && !/^(?=.*[\\d])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{6,16}$/.test(state.passWord) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert\"\n  }, \"PassWord Must be Strong(Add number,char etc..)\") || (!state.issame ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert\"\n  }, \"PassWord Not Same\") : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert\",\n    style: {\n      color: 'green'\n    }\n  }, \"PassWord Same\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input \".concat(state.issame || 'Wrong'),\n    type: state.isPassWordShowOpen ? \"text\" : \"passWord\",\n    name: \"subject\",\n    onChange: e => Reducer({\n      type: 'setComPassword',\n      data: e.target.value\n    }),\n    value: state.compassWord,\n    placeholder: \"Enter Confirm Password\",\n    required: true\n  }))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"show-pass\",\n    onClick: e => Reducer({\n      type: 'TogglePassWordShow'\n    })\n  }), \" : \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '1rem'\n    }\n  }, \"Show PassWord\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\"\n  }, state.isLoginOpen ? 'Log In' : 'Sing In'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert\"\n  }, \"OR\"), /*#__PURE__*/React.createElement(GoogleButton, {\n    text: \"\".concat(state.isLoginOpen ? 'Log' : 'Sing', \" In With Google\"),\n    responseSuccess: state.isLoginOpen ? res => FindUserWithGoogle(res, Reducer, GotoHome) : res => AddUserWithGoogle(res, Reducer, GotoHome)\n  })));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}