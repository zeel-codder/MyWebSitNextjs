{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar DataBase = require('server/database/DataBaseOperationsBlogInfo'); // import bcrypt from \"bcryptjs\";\n\n\nvar jwt = require('jsonwebtoken');\n\nexport default function handler(_x, _x2) {\n  return _handler.apply(this, arguments);\n}\n\nfunction _handler() {\n  _handler = _asyncToGenerator(function* (req, res) {\n    var {\n      name\n    } = req.body; // console.log(req.body);\n    // your server-side functionality\n\n    yield DataBase.ONConnections();\n    var data = yield DataBase.GetBlogInfoOne(name, DataBase.UserInfo); // console.log(data,12);\n\n    if (data === null) {\n      // console.log('Lest Go');\n      res.status(404).end(JSON.stringify({\n        message: JSON.stringify(data)\n      }));\n    }\n\n    var token = req.body.token || jwt.sign(data.toJSON(), process.env.key, {\n      expiresIn: \"1h\"\n    });\n    res.end(JSON.stringify({\n      result: data,\n      token\n    }));\n  });\n  return _handler.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/home/zeel/Desktop/web/My_Introduction/my-intro-nextjs/pages/api/finduser.js"],"names":["DataBase","require","jwt","handler","req","res","name","body","ONConnections","data","GetBlogInfoOne","UserInfo","status","end","JSON","stringify","message","token","sign","toJSON","process","env","key","expiresIn","result"],"mappings":";;;;AAAA,IAAMA,QAAQ,GAACC,OAAO,CAAC,4CAAD,CAAtB,C,CAEA;;;AACA,IAAMC,GAAG,GAAED,OAAO,CAAC,cAAD,CAAlB;;AAEA,wBAA8BE,OAA9B;AAAA;AAAA;;;+BAAe,WAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAE5C,QAAM;AAACC,MAAAA;AAAD,QAAOF,GAAG,CAACG,IAAjB,CAF4C,CAG5C;AAEA;;AACA,UAAMP,QAAQ,CAACQ,aAAT,EAAN;AACA,QAAMC,IAAI,SAAOT,QAAQ,CAACU,cAAT,CAAwBJ,IAAxB,EAA6BN,QAAQ,CAACW,QAAtC,CAAjB,CAP4C,CAQ5C;;AACA,QAAGF,IAAI,KAAG,IAAV,EAAe;AACb;AAEAJ,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoBC,IAAI,CAACC,SAAL,CAAe;AACjCC,QAAAA,OAAO,EAAEF,IAAI,CAACC,SAAL,CAAeN,IAAf;AADwB,OAAf,CAApB;AAID;;AAEA,QAAMQ,KAAK,GAACb,GAAG,CAACG,IAAJ,CAASU,KAAT,IAAkBf,GAAG,CAACgB,IAAJ,CAAST,IAAI,CAACU,MAAL,EAAT,EAAwBC,OAAO,CAACC,GAAR,CAAYC,GAApC,EAAyC;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAzC,CAA9B;AAGDlB,IAAAA,GAAG,CAACQ,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAe;AACrBS,MAAAA,MAAM,EAACf,IADc;AAErBQ,MAAAA;AAFqB,KAAf,CAAR;AAIH,G;;;;AAAA","sourcesContent":["const DataBase=require('server/database/DataBaseOperationsBlogInfo');\n\n// import bcrypt from \"bcryptjs\";\nconst jwt =require('jsonwebtoken');\n\nexport default async function handler(req, res) {\n\n    const {name}=req.body;\n    // console.log(req.body);\n   \n    // your server-side functionality\n    await DataBase.ONConnections();\n    const data=await DataBase.GetBlogInfoOne(name,DataBase.UserInfo);\n    // console.log(data,12);\n    if(data===null){\n      // console.log('Lest Go');\n\n      res.status(404).end(JSON.stringify({\n        message: JSON.stringify(data)\n      }));\n\n    }\n\n     const token=req.body.token || jwt.sign(data.toJSON(), process.env.key, { expiresIn: \"1h\" });\n     \n\n    res.end(JSON.stringify({\n      result:data,\n      token\n    }));\n};"]},"metadata":{},"sourceType":"module"}